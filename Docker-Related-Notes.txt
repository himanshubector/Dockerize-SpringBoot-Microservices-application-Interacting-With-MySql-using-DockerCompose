

Dockerfile content ——

FROM openjdk
WORKDIR /usr/src/bootapp
COPY . /usr/src/bootapp/
CMD ["java","-jar","CustomerService-0.0.1-SNAPSHOT.jar"]




docker-compose.yml content ———

version: '3'

services:

  dbservice:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=jaiganeshji
    volumes:
      - ./data:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - springbootapp



  appservice:
    build: ./springboot
    depends_on:
      - dbservice
    environment:
      - spring.datasource.url=jdbc:mysql://dbservice:3306/customer_app?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.password=jaiganeshji
    ports:
      - 9292:9599 #9292 port no. refers to the host machine port through which we can access application in browser, 9599 port no. refers to the port on which application is running inside the docker conatiner
    networks:
      - springbootapp


networks:
  springbootapp:




Command to run at path ——

/Users/himanshubector/Downloads/docker/docker-compose

Execute ->  docker-compose up






/////////////////////////////////////////   Docker Compose another example  //////////////////////////////////////////////////////////////////////


docker-compose.yml file —>>

version: '3'

services:

  user:
    container_name: user_service
    build:
      context: ./user-service    # context means the directory to find the docker file
      args: 
        JDK_VERSION: 11
      dockerfile: Dockerfile  
    image: dailycodebuffer/user  # to define custom image name
    ports:
      - 8081:8081


  department:
    container_name: department_service
    build:
      context: ./department-service
      dockerfile: Dockerfile
    image: dailycodebuffer/department 
    ports:
      - 8083:8082
    links:
      - "user:user_service" 




Dockerfile for department-service

FROM openjdk:11
ARG JAR_FILE=target/*.jar
COPY ${JAR_FILE} department-service.jar
ENTRYPOINT ["java","-jar","/department-service.jar"]




Dockerfile for user-service

ARG JDK_VERSION
FROM openjdk:${JDK_VERSION}
ARG JAR_FILE=target/*.jar
COPY ${JAR_FILE} user-service.jar
ENTRYPOINT ["java","-jar","/user-service.jar"]
